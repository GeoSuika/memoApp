{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sprhn\\\\Desktop\\\\\\u52C9\\u5F37\\\\geosuika\\\\memoApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport MemoList from './components/MemoList';\nimport MemoForm from './components/MemoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [memos, setMemos] = useState([]);\n\n  // const handleAddMemo = (newMemo) => {\n  //     setMemos([...memos, { id: Date.now(), ...newMemo }]);\n  // };\n\n  const handleAddMemo = async newMemo => {\n    try {\n      console.log('handleAddMemo Start!');\n      const response = await fetch('http://localhost:3001/api/memos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMemo)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create memo');\n      }\n      const result = await response.json();\n      setMemos([...memos, {\n        id: result.id,\n        ...newMemo\n      }]);\n    } catch (error) {\n      console.error('Error creating memo:', error);\n      // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\n    }\n  };\n\n  // const handleDeleteMemo = (memoId) => {\n  //     setMemos(memos.filter((memo) => memo.id !== memoId));\n  // };\n\n  const handleDeleteMemo = async memoId => {\n    try {\n      console.log('handleDeleteMemo Start!');\n      const response = await fetch('http://localhost:3001/api/memos/:${memoId}', {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create memo');\n      }\n      const result = await response.json();\n      setMemos(memos.filter(memo => memo.id !== memoId));\n    } catch (error) {\n      console.error('Error creating memo:', error);\n      // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\n    }\n  };\n\n  // MemoList を表示する際、コンポーネントがマウントされた時点でメモを取得する\n  useEffect(() => {\n    const handleGetMemos = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/memos', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Failed to fetch memos: ${response.statusText}`);\n        }\n        const result = await response.json();\n\n        // レスポンスが空であるかどうかを確認\n        if (!result || Object.keys(result).length === 0) {\n          console.error('Empty or invalid JSON response');\n          // 適切なエラーメッセージを表示するか、適切なエラー処理を行う\n          return;\n        }\n        setMemos(result); // レスポンスから取得したメモのデータを更新\n      } catch (error) {\n        console.error('Error fetching memos:', error);\n        // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\n      }\n    };\n\n    handleGetMemos();\n  }, []); // 第二引数の空の配列は、コンポーネントの初回描画時に一度だけ実行されることを示しています\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MemoForm, {\n      onAdd: handleAddMemo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MemoList, {\n      memos: memos,\n      onDelete: handleDeleteMemo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"y4ar6dRs6+EPVACIEeBA5/80WA4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MemoList","MemoForm","jsxDEV","_jsxDEV","App","_s","memos","setMemos","handleAddMemo","newMemo","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","id","error","handleDeleteMemo","memoId","filter","memo","handleGetMemos","statusText","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/sprhn/Desktop/勉強/geosuika/memoApp/src/App.js"],"sourcesContent":["//src/App.js\r\n\r\nimport React, {useState , useEffect} from 'react';\r\nimport MemoList from './components/MemoList';\r\nimport MemoForm from './components/MemoForm';\r\n\r\nconst App = () => {\r\n    const [memos,setMemos] = useState([]);\r\n\r\n    // const handleAddMemo = (newMemo) => {\r\n    //     setMemos([...memos, { id: Date.now(), ...newMemo }]);\r\n    // };\r\n\r\n    const handleAddMemo = async (newMemo) => {\r\n        try {\r\n          console.log('handleAddMemo Start!');\r\n          const response = await fetch('http://localhost:3001/api/memos', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(newMemo),\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Failed to create memo');\r\n          }\r\n    \r\n          const result = await response.json();\r\n          setMemos([...memos, { id: result.id, ...newMemo }]);\r\n        } catch (error) {\r\n          console.error('Error creating memo:', error);\r\n          // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\r\n        }\r\n      };   \r\n\r\n    // const handleDeleteMemo = (memoId) => {\r\n    //     setMemos(memos.filter((memo) => memo.id !== memoId));\r\n    // };\r\n\r\n    const handleDeleteMemo = async (memoId) => {\r\n        try {\r\n          console.log('handleDeleteMemo Start!');\r\n          const response = await fetch('http://localhost:3001/api/memos/:${memoId}', {\r\n            method: 'DELETE',\r\n          });\r\n    \r\n          if (!response.ok) {\r\n            throw new Error('Failed to create memo');\r\n          }\r\n    \r\n          const result = await response.json();\r\n          setMemos(memos.filter((memo) => memo.id !== memoId));\r\n        } catch (error) {\r\n          console.error('Error creating memo:', error);\r\n          // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\r\n        }\r\n      };  \r\n\r\n    // MemoList を表示する際、コンポーネントがマウントされた時点でメモを取得する\r\n    useEffect(() => {\r\n        const handleGetMemos = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/api/memos', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                      'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n                if (!response.ok) {\r\n                    throw new Error(`Failed to fetch memos: ${response.statusText}`);\r\n                }\r\n                const result = await response.json();\r\n\r\n                // レスポンスが空であるかどうかを確認\r\n                if (!result || Object.keys(result).length === 0) {\r\n                    console.error('Empty or invalid JSON response');\r\n                    // 適切なエラーメッセージを表示するか、適切なエラー処理を行う\r\n                    return;\r\n                }\r\n\r\n                setMemos(result); // レスポンスから取得したメモのデータを更新\r\n            } catch (error) {\r\n            console.error('Error fetching memos:', error);\r\n            // エラー処理を追加するか、ユーザーにエラーメッセージを表示するなどの適切な処理を行います\r\n            }\r\n        };\r\n        handleGetMemos();\r\n    }, []); // 第二引数の空の配列は、コンポーネントの初回描画時に一度だけ実行されることを示しています\r\n\r\n    return (\r\n        <div>\r\n            <h1>Memo App</h1>\r\n            <MemoForm onAdd={handleAddMemo} />\r\n            <MemoList memos={memos} onDelete={handleDeleteMemo} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}